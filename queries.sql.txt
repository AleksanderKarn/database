--Задача 2. Простые выборки
SELECT contact_name, country
FROM customers 
-- "имя контакта" и "город" (contact_name, country) из таблицы customers (только эти две колонки)

SELECT order_id, shipped_date - order_date 
FROM orders 
--идентификатор заказа и разницу между датами формирования (order_date) заказа и его отгрузкой (shipped_date) из таблицы orders

SELECT DISTINCT city 
FROM customers
--все города без повторов, в которых зарегестрированы заказчики (customers)

SELECT COUNT(*) 
FROM orders
--количество заказов (таблица orders)

SELECT COUNT(DISTINCT ship_country) 
FROM orders
--количество стран, в которые откружался товар (таблица orders, колонка ship_country)

--Задача 3. Фильтрация и сортировка

SELECT * 
FROM orders
WHERE ship_country IN ('France', 'Germany', 'Spain')
--заказы, доставленные в страны France, Germany, Spain (таблица orders, колонка ship_country)

SELECT DISTINCT(ship_country, ship_city) 
FROM orders
ORDER BY  ship_country, ship_city
--уникальные города и страны, куда отправлялись заказы, отсортировать по странам и городам (таблица orders, колонки ship_country, ship_city)

SELECT SUm(shipped_date - order_date)/COUNT(ship_country) 
From orders
WHERE ship_country = 'Germany'
--сколько дней в среднем уходит на доставку товара в Германию (таблица orders, колонки order_date, shipped_date, ship_country)

SELECT MIN(unit_price), MAX(unit_price) 
FROM products
WHERE discontinued  <> 1
--минимальную и максимальную цену среди продуктов, не снятых с продажи (таблица products, колонки unit_price, discontinued не равно 1)

SELECT MIN(unit_price), MAX(unit_price)
FROM products
WHERE discontinued  <> 1 and units_in_stock >= 20
--минимальную и максимальную цену среди продуктов, не снятых с продажи и которых имеется не меньше 20 (таблица products, колонки unit_price, units_in_stock, discontinued не равно 1)

--Задача 4. Фильтрация по шаблону и группировка
SELECT DISTINCT ship_city, ship_country 
FROM orders
WHERE ship_city LIKE '%burg'
--заказы, отправленные в города, заканчивающиеся на 'burg'. Вывести без повторений две колонки (город, страна) (см. таблица orders, колонки ship_city, ship_country)

SELECT order_id, customer_id, freight, ship_country
FROM orders
WHERE ship_country LIKE 'P%'
ORDER BY freight DESC 
LIMIT 10
--из таблицы orders идентификатор заказа, идентификатор заказчика, вес и страну отгузки. Заказ откружен в страны, начинающиеся на 'P'. Результат отсортирован по весу (по убыванию). Вывести первые 10 записей.

SELECT last_name, home_phone
FROM employees
WHERE region IS NULL
--фамилию и телефон сотрудников, у которых в данных отсутствует регион (см таблицу employees)

SELECT country, COUNT(*)
FROM suppliers
GROUP BY country
ORDER BY COUNT(*) DESC
--количество поставщиков (suppliers) в каждой из стран. Результат отсортировать по убыванию количества поставщиков в стране

SELECT SUM(freight), ship_country, COUNT(*)
FROM orders
WHERE ship_region IS NOT NULL
GROUP BY ship_country
HAVING SUM(freight) > 2750
ORDER BY SUM(freight) DESC
-- суммарный вес заказов (в которых известен регион) по странам, но вывести только те результаты, где суммарный вес на страну больше 2750. Отсортировать по убыванию суммарного веса (см таблицу orders, колонки ship_region, ship_country, freight)

SELECT country 
FROM customers
INTERSECT
SELECT country 
FROM suppliers
INTERSECT
SELECT country 
FROM employees
--страны, в которых зарегистированы и заказчики (customers) и поставщики (suppliers) и работники (employees).

SELECT country
FROM customers
INTERSECT
SELECT country 
FROM suppliers
EXCEPT
SELECT country 
FROM employees
--страны, в которых зарегистированы и заказчики (customers) и поставщики (suppliers), но не зарегистрированы работники (employees).